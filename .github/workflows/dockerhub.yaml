name: Build Image to Dockerhub.

on:
  workflow_dispatch:
    branches: [ dev ]
    inputs:
      commit_hash:
        description: 'Enter the commit short hash from dev branch you want to build image from.'
        default: '<hash>'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo History
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_hash }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildex
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Build, tag, and push image toDockerhub
        id: build-image
        uses: docker/build-push-action@v3
        env:
          SHA_TAG: ${{ github.event.inputs.commit_hash }}
          LATEST_TAG: latest
          ENVIRONMENT_TAG: staging
          REPO_NAME: ${{ github.event.repository.name }}
          DOCKERHUB_ORG: "oasisdexorg"
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            COMMIT_SHA=${{ env.SHA_TAG }}
            API_HOST=${{ secrets.API_HOST_STAGING }}
            MIXPANEL_ENV=staging
            MIXPANEL_KEY=${{ secrets.MIXPANEL_STAGING_KEY }}
            ADROLL_ADV_ID=${{ secrets.ADROLL_ADV_ID_STAGING }}
            ADROLL_PIX_ID=${{ secrets.ADROLL_PIX_ID_STAGING }}
            MAINNET_CACHE_URL=${{ secrets.MAINNET_CACHE_URL_STAGING }}
            MAILCHIMP_ENDPOINT=${{ secrets.MAILCHIMP_ENDPOINT }}
            MAILCHIMP_API_KEY=${{ secrets.MAILCHIMP_API_KEY }}
            INFURA_PROJECT_ID=${{ secrets.INFURA_PROJECT_ID }}
            ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}
            BLOCKNATIVE_API_KEY=${{ secrets.BLOCKNATIVE_STAGING_API_KEY }}
            SHOW_BUILD_INFO=1
            NODE_ENV=production
            NEXT_PUBLIC_SENTRY_ENV=staging
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          tags: |
            ${{ env.DOCKERHUB_ORG }}/${{ env.REPO_NAME }}:${{ env.SHA_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_ORG }}/${{ env.REPO_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_ORG }}/${{ env.REPO_NAME }}:buildcache,mode=max
