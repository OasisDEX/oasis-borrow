name: Deploy Storybook

on: [push]

jobs:
  deploy-storybook:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy storybook
    runs-on: ubuntu-latest
    env:
      REGION: us-east-1
      BUCKET_NAME: storybook.oasis.app
      CLOUDFRONT_ID: E3EJMOEAF32S4K

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache YARN dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install
        run: yarn --no-progress --non-interactive --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STORYBOOK_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.STORYBOOK_SECRET_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Extract commit hash
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and Deploy frontend files to S3
        run: |
          npm run build:storybook
          npm run publish:storybook -- --aws-profile=NONE --existing-output-dir=storybook-static --bucket-path=${{ env.BUCKET_NAME }}/${{ steps.vars.outputs.sha_short }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"

      # - name: Add comment
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: 'Storybook: https://storybook.oasis.app/${{ steps.vars.outputs.sha_short }}/index.html'
      #       })
