name: Build and test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache YARN dependencies
      id: cache-yarn
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache-yarn.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --no-progress --non-interactive

    - name: Run post install
      if: steps.cache-yarn.outputs.cache-hit == 'true'
      run: yarn postinstall

    - name: Cache next build
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

    - name: Lint
      run: yarn lint

    - name: Prettier
      run: yarn format

    - name: Test
      run: CI=true yarn coverage

    - name: Typecheck
      run: yarn typecheck

    - name: Build
      env:
        SENTRY_RELEASE: ${{ env.SHA_TAG }}
        NEXT_PUBLIC_SENTRY_ENV: staging
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN  }}
        NODE_ENV: production
        NODE_OPTIONS: --max_old_space_size=4096
        COMMIT_SHA: ${{ env.SHA_TAG }}
        API_HOST: ${{ secrets.API_HOST_STAGING }}
        MIXPANEL_ENV: staging
        MIXPANEL_KEY: ${{ secrets.MIXPANEL_STAGING_KEY }}
        ADROLL_ADV_ID: ${{ secrets.ADROLL_ADV_ID_STAGING }}
        ADROLL_PIX_ID: ${{ secrets.ADROLL_PIX_ID_STAGING }}
        INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        MAINNET_CACHE_URL: ${{ secrets.MAINNET_CACHE_URL_STAGING }}
      run: yarn build
#  test-e2e:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Cache YARN dependencies
#        uses: actions/cache@v1
#        with:
#          path: node_modules
#          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.OS }}-yarn-cache-
#
#      - name: Install
#        run: yarn --no-progress --non-interactive --frozen-lockfile
#
#      - name: Run deps
#        run: |
#          cd ./scripts
#          docker-compose up -d
#          sleep 10
#
#      - name: Test-e2e
#        run: yarn test:e2e

# Few tips github actions
# - name: Setup SSH debug session
#   uses: mxschmitt/action-tmate@v2

